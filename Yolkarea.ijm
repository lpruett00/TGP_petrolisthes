// Define the yolkarea function
function yolkarea(input, filename) {
    // Open the file
    open(input + "/" + filename);
    wait(500); // Wait for the file to open
    run("RGB Color");

    // Color Thresholder 2.14.0/1.54f
    // Autogenerated macro, single images only!
    min = newArray(3);
    max = newArray(3);
    filter = newArray(3);
    a = getTitle();
    run("RGB Stack");
    wait(500); // Wait for the conversion
    run("Convert Stack to Images");
    wait(500); // Wait for the conversion
    
    if (isOpen("Red")) {
        selectWindow("Red");
        rename("0");
    } else {
        print("No window with the title 'Red' found");
        return;
    }
    
    if (isOpen("Green")) {
        selectWindow("Green");
        rename("1");
    } else {
        print("No window with the title 'Green' found");
        return;
    }
    
    if (isOpen("Blue")) {
        selectWindow("Blue");
        rename("2");
    } else {
        print("No window with the title 'Blue' found");
        return;
    }

    min[0] = 103;
    max[0] = 255;
    filter[0] = "pass";
    min[1] = 72;
    max[1] = 255;
    filter[1] = "stop";
    min[2] = 89;
    max[2] = 255;
    filter[2] = "stop";

    for (i = 0; i < 3; i++) {
        selectWindow("" + i);
        setThreshold(min[i], max[i]);
        run("Convert to Mask");
        if (filter[i] == "stop") run("Invert");
    }

    imageCalculator("AND create", "0", "1");
    imageCalculator("AND create", "Result of 0", "2");

    for (i = 0; i < 3; i++) {
        selectWindow("" + i);
        close();
    }

    selectWindow("Result of 0");
    close();
    selectWindow("Result of Result of 0");
    rename(a);

    // Colour Thresholding-------------
    run("Create Selection");

    // Add the filename to the Results table
    run("Measure");
    row = nResults - 1; // Get the last row
    setResult("Image", row, filename); // Add the filename to the new column

    // Close all open image windows
    while (nImages > 0) {
        selectImage(nImages);
        close();
    }
}

// adjust filepaths here
input = "/Volumes/eels/Crab project /Embryo_data/Brood_1/Control/cage 48/7. 2-27-24/CONTROL";
for (i = 1; i <= 12; i++) {
    filename = "C" + i + ".tif";
    if (File.exists(input + "/" + filename)) {
        print("Processing " + filename);
        yolkarea(input, filename);
    } else {
        print("File not found: " + filename);
    }
}

// Save the results as a CSV file
outputCSV = input + "/yolk.results.csv";
saveAs("Results", outputCSV);
print("Results saved to " + outputCSV);


